"""
Написать программу, которая читая символы из бесконечной последовательности (эмулируется конечным файлом), распознает, преобразует и выводит на экран объекты по определенному правилу. Объекты разделены пробелами.
Преобразование делать по возможности через словарь. Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа. Регулярные выражения использовать нельзя.

Вариант 6:

Целые нечетные числа. Замена: первая цифра каждого четного числа на нечетном месте на английскую цифру прописью.

"""

# Словарь для преобразования цифр в русские слова
digit_to_word = {
    '0': 'ноль', '1': 'один', '2': 'два', '3': 'три', '4': 'четыре',
    '5': 'пять', '6': 'шесть', '7': 'семь', '8': 'восемь', '9': 'девять'
}

# Функция для замены первой цифры на нечётной позиции на русское слово
def replace_digit_with_word(number):
    number_str = str(number)
    # Если число чётное, заменяем первую цифру на нечётной позиции
    if int(number) % 2 == 0:
        new_number = ""
        for i, digit in enumerate(number_str):
            if i % 2 == 0:  # нечётная позиция (по индексу)
                new_number += digit_to_word[digit]  # заменяем цифру на слово
            else:
                new_number += digit  # оставляем цифру как есть
        return new_number
    return number_str  # нечётные числа не изменяются

# Функция для обработки последовательности из файла
def process_sequence_from_file(file_path):
    with open(file_path, 'r') as file:
        for line in file:  # читаем файл построчно
            numbers = line.split()  # разделяем строку на числа
            for number in numbers:
                if int(number) % 2 != 0:
                    print(number)  # выводим нечётные числа как есть
                else:
                    print(replace_digit_with_word(number))  # для чётных чисел заменяем первую цифру

# Пример использования программы
file_path = 'input.txt'  # путь к файлу с данными
process_sequence_from_file(file_path)

